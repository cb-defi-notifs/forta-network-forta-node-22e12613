// Code generated by MockGen. DO NOT EDIT.
// Source: services/components/containers/image_cleanup.go

// Package mock_containers is a generated GoMock package.
package mock_containers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockImageCleanup is a mock of ImageCleanup interface.
type MockImageCleanup struct {
	ctrl     *gomock.Controller
	recorder *MockImageCleanupMockRecorder
}

// MockImageCleanupMockRecorder is the mock recorder for MockImageCleanup.
type MockImageCleanupMockRecorder struct {
	mock *MockImageCleanup
}

// NewMockImageCleanup creates a new mock instance.
func NewMockImageCleanup(ctrl *gomock.Controller) *MockImageCleanup {
	mock := &MockImageCleanup{ctrl: ctrl}
	mock.recorder = &MockImageCleanupMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageCleanup) EXPECT() *MockImageCleanupMockRecorder {
	return m.recorder
}

// Do mocks base method.
func (m *MockImageCleanup) Do(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Do indicates an expected call of Do.
func (mr *MockImageCleanupMockRecorder) Do(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockImageCleanup)(nil).Do), arg0)
}
